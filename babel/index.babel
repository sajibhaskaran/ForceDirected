const url = "https://raw.githubusercontent.com/DealPete/forceDirected/master/countries.json"
//41020D
let margin = { top: 100, right: 20, bottom: 100, left: 80}
let w = window.innerWidth
let h = window.innerHeight
let height = (h * 0.95) ,
    width = (w * 0.8) 

let chart = d3.select('#chart').append('svg')
              .attr('width', width )
              .attr('height', height )
              .style('background', '#4A1908')

let tooltip = d3.select('body').append('div')
 .style('position', 'absolute')
 .style('text-align', 'center')
 .style('padding','5px 10px')
 .style('background', 'green')
 .style('color', '#FFF')
 .style('border-radius', '5px')
 .style('opacity', 0)              

d3.json(url, data => {
  let nodes = data.nodes
  let links = data.links
 
let force = d3.layout.force()
.nodes(nodes)
.links(links)
.charge(-75)
.size([width, height-25])
.linkDistance(50)

let link = chart.selectAll('line')
.data(links).enter().append('line')
.attr('stroke', 'white')
.attr('stroke-width', .5)

let node = d3.select('#flags').selectAll('.node')
.data(nodes).enter().append('img')
.attr('class', d =>{return 'flag flag-'+d.code})
.call(force.drag)
.on('mouseover', (d, i)=>{
  tooltip.transition()
         .style('opacity', .9)
  tooltip.html(d.country)
         .style('left', (d3.event.pageX-35) + 'px')
  .style('top', (d3.event.pageY-35) + 'px')
})
.on('mouseout', d =>{
  tooltip.transition().delay(300)
         .style('opacity', 0)
})

let title = chart.append('text')
.attr('x', width/2)
                 .attr('y', 40)
                 .attr("text-anchor","middle")
                 .attr('text-decoration', 'underline')
                 .style('font-size', '1.6em')

                 .style('fill', 'silver')
.text("National Contiguity with a Force Directed Graph")

force.on('tick', () =>{ 
  node.attr('transform', d =>{
    return 'translate('+ d.x +',' + d.y+')'
  })  
  link.attr('x1', d =>{return d.source.x})
      .attr('y1', d =>{return d.source.y})
      .attr('x2', d =>{return d.target.x})
      .attr('y2', d =>{return d.target.y})
  
  node.style('top', d =>{return d.y-6 +'px'})
  .style('left', d =>{return d.x-8 + 'px'})
})
force.start()
})





